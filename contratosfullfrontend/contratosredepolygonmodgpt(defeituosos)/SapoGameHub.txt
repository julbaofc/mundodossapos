// SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import "./SapoCore.sol";

contract SapoGameHub is SapoCore {
    // External links (set post-deploy to shrink constructor)
    address public finance;
    address public sapoToken;
    address public frogNFT;
    address public registry;

    event Linked(address finance, address token, address frog, address registry);

    constructor(address _owner) SapoCore(_owner) {}

    function setLinks(address _finance, address _sapoToken, address _frogNFT, address _registry) external onlyOwner {
        finance  = _finance;
        sapoToken = _sapoToken;
        frogNFT  = _frogNFT;
        registry = _registry;
        emit Linked(finance, sapoToken, frogNFT, registry);
    }

    // Example listing struct packed better: address + (u64 + u32 + u32)
    struct Listing {
        address seller;   // 20 bytes (packed start)
        uint64  price;    // 8
        uint32  start;    // 4
        uint32  end;      // 4
        // total 36 bytes -> 2 slots
    }
    mapping(bytes32 => Listing) public listings;

    function setListing(bytes32 id, address seller, uint64 price, uint32 start, uint32 end) external onlyOwner whenNotPaused {
        listings[id] = Listing(seller, price, start, end);
    }
}
